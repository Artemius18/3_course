const express=require('express');
const bodyParser=require('body-parser')
const fs=require('fs');

const app=express();
app.use(bodyParser.text({
    type: 'text/plain'
}))
app.use(express.static('static'));

var number=Math.floor(Math.random()*100);
console.log('I guess '+number);

app.get('/',(req,res)=>{
    res.sendFile('index.html');
});

app.post('/', (req,res,next)=>{
    if(!req.body){
        res.status(418).send('Hey, where is the number')
    }
    else{
        next();
    }
},(req,res,next)=>{
    if(isNaN(req.body)){
        res.status(419).send('Cannot parse this');
    }
    else{
        next()
    }
},(req,res)=>{
    if(Number(req.body)===number){
        res.status(200).send('CONGRATULATIONSüéâ');
        number=Math.floor(Math.random()*100);
        console.log('I guess '+number);
    }
    else{
        res.status(420).send('You are wrong. Try one more!')
    }
})

app.listen(8085,()=>{
    console.log('listen to port 8085');
})

// –°–µ—Ä–≤–µ—Ä –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ, –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ text/plain, –µ—Å–ª–∏ —á–∏—Å–ª–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç, 
// —Ç–æ –∫–ª–∏–µ–Ω—Ç—É –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É —Å –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º, –≤—Å–µ –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ –ø–æ